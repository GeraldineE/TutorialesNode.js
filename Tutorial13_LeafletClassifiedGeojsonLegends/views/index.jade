doctype html
html(lang='en')
  head
    title Gidahatari
    meta(charset='utf-8')
    script(src='https://unpkg.com/leaflet@1.3.1/dist/leaflet.js', integrity='sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==', crossorigin='')
    link(rel='stylesheet', href='https://unpkg.com/leaflet@1.3.1/dist/leaflet.css', integrity='sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ==', crossorigin='')
    link(href="/public/css/app.css", rel="stylesheet")
    style.
      #map{width: 900px; height: 500px}
      
    
    body
      div(class = "big-top-space")
        h1 #{hola}
      //- var datoo = JSON.stringify(#{dato})
      //h3 #{dato}
      
      #map
      script.
    
        var map = L.map('map').setView([-17.335418, -71.334076], 6);
        
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
        {
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> ',
        maxZoom: 18,
        minZoom: 1,
        }).addTo(map);
        
        
        var myVar1 = !{JSON.stringify(prov)};
        var myVar2 = !{JSON.stringify(riv)};
        
        var provincias = L.geoJSON(myVar1,{style:styleP}).addTo(map);
        var rios = L.geoJSON(myVar2,{style:styleR});
        
        function getColorP(d) {
         return d > 6800000 ? '#800026' :
                d > 2000000  ? '#BD0026' :
                d > 800000  ? '#E31A1C' :
                d > 14000  ? '#FC4E2A' :
                              '#FFEDA0';
                  }
        function styleP(feature){
          return{
            fillColor: getColorP(feature.properties.ha),
            weight: 2,
            opacity:1,
            color: "white",
            dashArray: "3",
            fillOpacity: 0.7
          };
        }
                  
        function getColorR(d) {
         return d >= 12 ? '#0f0d0d' :
                d >= 4 ? '#f20000' : 
                d >= 3 ? '#e0d64a' :
                  '#1acfd8';
                  }

        function styleR(feature){
          return{
            color: getColorR(feature.properties.Cate),
            opacity: 0.7,
            dashArray: "3",
            lineJoin: 'round'
          };
        }
        
        var legendP = L.control({position: 'bottomright'});
        legendP.onAdd = function (map) {
        
          var div = L.DomUtil.create('div', 'info legend'),
              grades = [14000, 800000, 2000000, 6800000, 680000],
              labels = [],
              from, to;
              
          for (var i = 0; i < grades.length; i++) {
            div.innerHTML +=
            '<i style="background:' + getColorP(grades[i] + 1) + '"></i> ' +
            grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');
          };
          return div;
        };
        
        var legendR = L.control({position: 'bottomright'});
        legendR.onAdd = function (map) {
          var div = L.DomUtil.create('div', 'info legend'),
              grades = [3, 4, 12],
              labels = [],
              from, to;
              
          for (var i = 0; i < grades.length; i++) {
            div.innerHTML +=
            '<i style="background:' + getColorR(grades[i]) + '"></i> ' + grades[i] + '<br>';
          };
          return div;
        };
        
        
        var capas = {
          "Provincias": provincias,
          "Rios": rios
        };
        var overlayMaps = {};
  
  
        L.control.layers(capas, overlayMaps,{
          collapsed:false,
          position:'bottomleft'
        }).addTo(map);
        
        
        legendP.addTo(map);
        currentLegend = legendP;
        
        map.on('baselayerchange', function (eventLayer) {
            if (eventLayer.name === 'Provincias') {
                map.removeControl(currentLegend );
                currentLegend = legendP;
                legendP.addTo(map);
            }
          else if  (eventLayer.name === 'Rios') {
                map.removeControl(currentLegend );
                currentLegend = legendR;
                legendR.addTo(map);
            }
          })
        
        
        
        
        
